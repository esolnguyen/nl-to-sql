services:
  engine:
    container_name: engine
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "80:80"
    environment:
      - CORE_PORT=${CORE_PORT:-80}
    command: uvicorn src.main:app --host 0.0.0.0 --port ${CORE_PORT:-80} --log-config log_config.yml --log-level debug --reload
    stdin_open: true
    tty: true
    volumes:
      - ./nl_to_sql:/app/nl_to_sql
    depends_on:
      - mongodb
    networks:
      - nl_to_sql_network
    env_file: .env
  mongodb:
    container_name: mongodb
    image: mongo:latest
    restart: always
    ports:
      - 27017:27017
    volumes:
      - ./initdb.d/init-mongo.sh:/docker-entrypoint-initdb.d/init-mongo.sh:ro
      - ./dbdata/mongo_data/data:/data/db/
      - ./dbdata/mongo_data/db_config:/data/configdb/
    environment:
      MONGO_INITDB_ROOT_USERNAME: "${MONGODB_DB_USERNAME}"
      MONGO_INITDB_ROOT_PASSWORD: "${MONGODB_DB_PASSWORD}"
      MONGO_INITDB_DATABASE: "${MONGODB_DB_NAME}"
    networks:
      - nl_to_sql_network
  postgres:
    image: postgres
    restart: always
    container_name: my_postgres
    environment:
      POSTGRES_PASSWORD: 123qwe
    ports:
      - "5432:5432"
    networks:
      - nl_to_sql_network
  mssql:
    image: mcr.microsoft.com/mssql/server:latest
    container_name: sql_server_container
    environment:
      SA_PASSWORD: Kenzu2lfc)1
      ACCEPT_EULA: "Y"
    ports:
      - "1433:1433"
    networks:
      - nl_to_sql_network

networks:
  nl_to_sql_network:
    external: true
